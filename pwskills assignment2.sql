-- BASIC AGGREGATE FUNCTIONS:
use mavenmovies;
-- (Q1) retrieve the total number of rentals made in the sakila database.
-- Hint: use the count() function.

SELECT * from rental;
select count(*) from rental;

-- (Q2) Find the average rental duration (in days) of movies rented from the sakila database.
-- Hint: utilize the ave() function.

select * from rental;
select * from film;
select avg(rental_duration) from film;

-- STRIN FUNCTIONS:

-- (Q3) Dispaly the first name and last name of customers in uppercase.
-- Hint: use the upper() function.

select * from customer;
select upper(first_name) from customer;
select upper(last_name) from customer;

-- (Q4) Extract the month from the rental date and display it alongside the rental ID. 
-- Hint: Employ the month() function.

select * from rental;
select month(rental_date), rental_id from rental; 

 -- GROUP BY:
 
 -- (Q5) Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 
 -- Hint: use count() in conjuction with group by. 

 select * from rental;
 select customer_id, count(rental_id) from rental where customer_id group by customer_id;


 -- (Q6) Find the total revenue generated by each store. 
 -- Hint: combines sum() and group by. 
 
 select * from payment;
 SELECT 
    SUM(amount) AS total_revenue_generated
FROM
    payment
GROUP BY staff_id , rental_id , customer_id , payment_id
ORDER BY total_revenue_generated;
 select sum(amount) from payment;
 
 -- (Q7) Display the title of the movie, customer's first name and last name who reted it.
 -- Hint: use join between the film, inventory, rental, and customer tables. 
 
 select * from film;
 select * from inventory;
 select * from rental;
 select * from customer;
 SELECT 
	first_name, last_name, title
FROM
    film
        INNER JOIN
    inventory on film.film_id=inventory.film_id
        INNER JOIN
	rental on inventory.inventory_id=rental.inventory_id
        INNER JOIN
    customer on rental.customer_id=customer.customer_id;
 
 -- (Q8) Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
 -- Hint: use join between the film actor, film, and actor tables. 
 select * from film;
 SELECT 
    CONCAT(first_name, ' ', last_name) AS name, title
FROM
    film
        inner JOIN
        film_actor on film.film_id=film_actor.film_id
        inner join
        actor on film_actor.actor_id = actor.actor_id
WHERE
    title = 'Gone with the wind';
 
 -- GROUP BY:
 
 -- (Q1) Determine the total number of rentls for each category of movies. 
 -- Hint: join film_category, film, and rental tables, then use count() and group by.   
 
 select * from film;
 select * from film_category;
 select * from rental;
 select count(rental_id) as num_of_rental from film 
 inner join film_category on film.film_id=film_category.film_id 
 inner join rental on film_category.last_update = rental.last_update
 group by film_category.category_id; 


SELECT fc.category_id, COUNT(r.rental_id) AS rental_count
FROM rental r
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
JOIN film_category fc ON f.film_id = fc.film_id
GROUP BY fc.category_id;

-- (Q2) Find the average rental rate of movies each language. 
-- Hint: Join film and language tables, then use avg() and group by.

SELECT l.name AS language, AVG(f.rental_rate) AS avg_rental_rate
FROM film f
JOIN language l ON f.language_id = l.language_id
GROUP BY l.name;

SELECT 
    l.name as language, AVG(f.rental_rate) AS avg_rental_rate
FROM
    film f
        INNER JOIN
    language l ON f.language_id = l.language_id
GROUP BY l.name;
    

-- JOINS:

-- (Q3) Retrieve the customer names along with the total amoung they've spent on rentals.
-- Hint: Join customer, payment, and rental tables, then use sum()and group by.

select * from customer;
select * from payment;
select * from rental;
SELECT 
    c.first_name, c.last_name, SUM(p.amount) as total_amount_spend
FROM
    customer c
       inner JOIN
    payment p ON c.customer_id = p.customer_id
	   inner JOIN
    rental r ON c.customer_id = r.customer_id group by c.customer_id;

-- (Q4) List the titles of movies rented by each customer in a particular city (e.g., 'Londan'). 
-- Hint: Join customer, address, city,rental, inventory, and film tables, then use group by.

select * from customer;
select * from address;
select * from city;
select * from rental;
select * from inventory;
select * from film;
SELECT 
    f.title as title_of_movies, ct.city_id, c.customer_id, a.address
FROM
    customer c
        INNER JOIN
    address a ON c.address_id = a.address_id
        INNER JOIN
    city ct ON a.city_id = ct.city_id
        INNER JOIN
    rental r ON c.customer_id = r.customer_id
        INNER JOIN
    inventory i ON r.inventory_id = i.inventory_id
        INNER JOIN
    film f ON i.film_id = f.film_id 
    where ct.city='London'
    order by f.title,ct.city_id,c.customer_id,a.address; 

-- ADVANCED JOIND AND GROUP BY:

-- (Q5) Display the top 5 rented movies along with the number of times they\ve been rented. 
-- Hint: join film, inventory, and rental table, then use count() and group by, and limit the results.

select * from film;
select * from inventory;
select * from rental;
SELECT 
    f.title as movie_title,
    count(*) as rental_count
FROM
    film f
        INNER JOIN
    inventory i ON f.film_id = i.film_id
        INNER JOIN
    rental r ON i.inventory_id = r.inventory_id
group by
 f.title order by rental_count desc limit 5;
 
 SELECT 
    f.title as movie_title,
    count(*) as rental_count
FROM
    film f
        INNER JOIN
    inventory i ON f.film_id = i.film_id
        INNER JOIN
    rental r ON i.inventory_id = r.inventory_id
group by
 f.title order by rental_count limit 5;

-- (Q6) Determine the customers who have rented movies fom both stores (store ID 1 and store id 2).
-- Hint: use joins with rental, inventory, and customer tables and consider count() and group by.

select * from rental;
select * from inventory;
select * from customer;
select * from store;
SELECT 
    c.first_name, c.last_name,c.customer_id
FROM
    customer c
        INNER JOIN
    rental r ON c.customer_id = r.customer_id
        INNER JOIN
    inventory i ON r.inventory_id = i.inventory_id
	    INNER JOIN  
    store s ON i.store_id = s.store_id
    where s.store_id in (1,2) group by c.customer_id,c.first_name,c.last_name having count(distinct s.store_id)=2;
  